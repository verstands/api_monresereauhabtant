// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Agents {
  id    String @id @default(cuid())
  nom   String
  prenom   String
  mdp   String
  statut   String
  email String @unique
  agendas Agendas[]
  appels Appels[]
  dossiers Dossiers[]
  commentaires Commentaires[]
  agents Accesapplications[]
  agentrole Accesroles[]
}
 model Roles {
  id    String @id @default(cuid())
  initule   String
  role Accesroles[]

}

model Menus {
  id    String @id @default(cuid())
  nom   String
  sousmenus Sousmenus[]
}

model Sousmenus {
  id    String @id @default(cuid())
  nom   String
  id_menu Menus  @relation(fields: [id], references: [id])
}

model Agendas {
  id    String @id @default(cuid())
  id_user   String
  info   String
  zone   String
  telephone   String

  agents Agents @relation(fields: [id_user], references: [id])
}

model TypeProduits {
  id    String @id @default(cuid())
  image   String
  titre   String
  description   String  
}
model Capamgnes {
  id    String @id @default(cuid())
  titre   String
  file   String
}

model Appels {
  id    String @id @default(cuid())
  id_user   Agents @relation(fields: [id], references: [id])
  id_capamgne  String
  direction   String
  statut   String
  dure   String
  numero   String
}

model Raisons {
  id    String @id @default(cuid())
  nom   String
}

model Scripts {
  id    String @id @default(cuid())
  titre   String
  contenue   String @db.Text()
  position   String
}

model Provenances {
  id    String @id @default(cuid())
  nom   String
}

model Cartes {
  id    String @id @default(cuid())
}

model Configurations {
  id    String @id @default(cuid())
}


model Dossiers {
  id    String @id @default(cuid())
  nom   String
  adresse   String
  telephone   String
  date   String
  email   String
  surface   String
  chauffage   String
  id_user   Agents @relation(fields: [id], references: [id])
}

model Villes {
  id    String @id @default(cuid())
  nom   String
}

model Archivages {
  id    String @id @default(cuid())
  nom   String
}

model TypeChauffages {
  id    String @id @default(cuid())
  intitule   String
}

model TypeRevenus {
  id    String @id @default(cuid())
  intitule   String
}

model Commentaires {
  id    String @id @default(cuid())
  message   String
  id_user   Agents @relation(fields: [id], references: [id])
}

model Presentations {
  id    String @id @default(cuid())
  conteneu   String
}

model Questions {
  id    String @id @default(cuid())
  conteneu   String
}

model Conclusions {
  id    String @id @default(cuid())
  conteneu   String
}

model Status {
  id    String @id @default(cuid())
  nom  String
}

model Directions {
  id    String @id @default(cuid())
  nom  String
}

model Installateurs {
  id    String @id @default(cuid())
  nom  String
}

model Invalidites {
  id    String @id @default(cuid())
  nom  String
}
model Applications {
  id    String @id @default(cuid())
  titre   String
  image   String
  lien   String
  application Accesapplications[]

}

model Accesapplications {
  id    String @id @default(cuid())
  id_user   String
  id_application String

  agents Agents @relation(fields: [id_user], references: [id])
  application Applications @relation(fields: [id_application], references: [id])

}

model Accesroles {
  id    String @id @default(cuid())
  id_user   String
  id_role String

  agentrole Agents @relation(fields: [id_user], references: [id])
  role Roles @relation(fields: [id_role], references: [id])

}